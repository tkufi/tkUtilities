
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


    {
        "Get Service": {
            "scope": "luau,lua",
            "prefix": "GetService",
            "isFileTemplate": false,
            "body": [
                "local $1 = game:GetService(\"$1\")",
            ]
        },
        "Create Service": {
            "scope": "luau,lua",
            "prefix": "create-service",
            "isFileTemplate": true,
            "body": [
                "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
                "local ServerScriptService = game:GetService(\"ServerScriptService\") \n",
    
                "local Net = require(ReplicatedStorage.Wally.Net)\n",
    
                "local Logger = require(ReplicatedStorage.Wally.Log)",
                "local Log = Logger.new()\n",
    
                "local $1Service = {}\n",
    
                "function $1Service.OnStart()\n",
                "end\n",
                
                "return $1Service"
            ]
        },
        "Create Bridge": {
            "scope": "luau,lua",
            "prefix": "create-bridge",
            "isFileTemplate": true,
            "body": [
                "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n",
                
                "local UIStates = require(ReplicatedStorage.FComponents.UIStates)\n",
    
                "local Net = require(ReplicatedStorage.Wally.Net)\n",
    
                "local Logger = require(ReplicatedStorage.Wally.Log)",
                "local Log = Logger.new()\n",
    
                "local $1Bridge = {}\n",
    
                "function $1Bridge.OnStart()\n",
                "end\n",
                
                "return $1Bridge"
            ]
        },
        "Create PromptAction": {
            "scope": "luau, lua",
            "prefix": "create-promptaction",
            "isFileTemplate": true,
            "body": [
                "local PromptAction = {}\n",
                "function PromptAction.Execute(prompt: ProximityPrompt, parent: BasePart | Attachment)\n",
                "end\n",
                "return PromptAction"
            ]
        }
    }